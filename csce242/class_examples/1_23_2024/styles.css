/*
    Created by Chrissy Dobrowolski 
    Class Example
    1.23.2024 
    CSCE 242- 001 

*/


/* Typically before body; used for creating variables */
:root
{
    /* "background-color" --> variable */
    --background-color: #f9e6e7;
    --primary-color: #4c0208;
    --secondary-color: #91222b;
}

body
{
    font-family: Arial, Helvetica, sans-serif;
    background: var(--background-color);
}


/* Structure: */

#main-content
{
    background: #fff;
    padding: 5px;
    width: 80%;
    margin: 5px;

    /* Centers horizontally */
    margin: auto;

    border-radius: 5px;
}

#play-area
{
    width: 100%;
    height: 400px;
    background: violet;
    position: relative;
}

#block
{
    width: 150px;
    height: 150px;
    background: skyblue;
    animation-name: play;
    animation-duration: 2s;
    animation-iteration-count: infinite;

    /*
    static 
    absolute --> lets it take up space even if there is text; to the page 
    relative --> always reserves space in DOM; to its space 
    fixed --> stays exactly where it is on screen regardless of scrolling, etc. 
    sticky 
    */
    position: relative;

    /* Used to position block; can do px or % */
    /* 
    
    top: 40%;
    left: 40%;

    */
    
}


/* Animation: */

@keyframes play
{
    0%
    {
        background: red;
        opacity: 1;
        left: 0%;
        transform: rotate(0deg);
    }

    15%
    {
        background: orange;
    }

    30%
    {
        background: yellow;
    }

    45%
    {
        background: green;
        opacity: 0;
        transform: rotate(100deg);
    }

    60%
    {
        background: blue;
    }

    80%
    {
        background: indigo;
    }

    100%
    {
        background: violet;
        left: 0%;
    }

}


/* Typography: */

h1 
{
    color: darkslategray;
}

#block p
{
    text-align: center;
    line-height: 150px;
}

/*

Notes: 

- To get videos, maps, etc: 
-- Click "Share", "Embed", then copy HTML code 
- IDs always win over / override classes 
- When paste embed code, REMOVE styling b/c always do styling in CSS, not HTML 
- For Assignment 5: 
-- DON'T put text inside image for USC logo 
-- Section-colon hover for gray box hovering 
-- Arial font 
-- Can skip search bar 
--- input type=text 
-- Do NOT have to do sublists (only need Departments, not list afterwards) 
-- Left menu there for mobile and desktop 
-- Can choose background and foreground colors for place-hold it images (look on website) 
-- (?) Do desktop sizing 
- For Main Page: 
--- Screenshot tags: 
---- max-width: __% --> will fix images going out of boxes 
-- As have more items: flex 1, 2, 3... OR flex: __% 
-- Can do: 

    .assignments-container 
    {
        display: flex;
        flex-wrap: wrap;
    } 

    .assignment
    {
        flex: 30%;
    }

    .assignment img* 
    {
        max-width: 90%;
    }

    *NOT in media query 

-- Responsive text sizing --> stops text from wrapping / splitting lines when resizing screen 

- For Wireframes: 
-- Use MockITT insert/embed code INSIDE main page index.html 
-- Don't have to make entire gallery of items clickable, just first one 


*/